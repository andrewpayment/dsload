import { EmployeeClientRate } from './employee-client-rate.model';
import { Tax } from './tax.model';
import { EmployeeOnboardingWorkflow } from './employee-onboarding-workflow.model';
import { ClientDepartment } from './client-department.model';
import { User } from './user.model';
import { UserType } from '@enums/user-type.enum';

export interface AddEmployeeRequest {
  employeeId: number;
  clientId: number | null;
  clientName: string;
  firstName: string;
  middleInitial: string;
  lastName: string;
  employeeNumber: string;
  hireDate: Date | null;
  dateOfBirth: Date | null;
  employeeStatusId: number;
  payFrequencyId: number;
  payTypeId: number;
  isOtExempt: boolean;
  clockClientTimePolicyId: number | null;
  employeeClientRates: EmployeeClientRate[];
  salaryAmount: number | null;
  userId: number;
  username: string;
  password: string;
  email: string;
  sutaState: Tax;
  jobProfileId: number | null;
  jobTitle: string;
  clientDivisionId: number | null;
  clientDepartmentId: number | null;
  clientCostCenterId: number | null;
  clientWorkersCompId: number | null;
  clientGroupId: number | null;
  clientShiftId: number | null;
  EeocJobCategoryId: number | null;
  EeocLocationId: number | null;
  isFromAddEmployee: boolean | null;
  isBenefitsEligibility: boolean | null;
  benefitPackageId: number | null;
  salaryMethodTypeId: number | null;
  jobClass: string;
  isBenefitPortalOn: boolean | null;
  competencyModelId: number | null;
  directSupervisorId: number | null;
  employeeWorkflow: EmployeeOnboardingWorkflow[];
}

export interface EmployeeContactResult {
  employeeId: number;
  employeeNumber: string;
  employeeStatusType: number;
  clientId: number;
  competencyModel: number;
  costCenter: number;
  cellPhoneNumber: string;
  directSupervisor: string;
  division: number;
  department: ClientDepartment;
  emailAddress: string;
  employeeAvatar: any;
  firstName: string;
  middleInitial: string;
  lastName: string;
  isActive: boolean;
  isTemp: boolean;
  jobTitle: string;
  jobTitleId: number;
  payType: any;
  profileImage: any; 
  reviewTemplates: number[];
  separationDate: Date | null;
  supervisopr: User;
  supervisorName: string;
  terminationReason: any;
  userId: number | null;
  userType: UserType;
}
